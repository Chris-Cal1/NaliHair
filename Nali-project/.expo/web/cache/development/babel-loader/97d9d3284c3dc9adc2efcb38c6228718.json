{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MaKe'\\\\Documents\\\\LACAPSULE\\\\NaliHair\\\\Nali-project\\\\screens\\\\RecipeDay7_0.js\";\nimport React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Text, View, Content } from 'native-base';\nimport { Header } from 'react-native-elements';\nimport { MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Handlee_400Regular } from '@expo-google-fonts/handlee';\nimport { Roboto_400Regular, Roboto_700Bold, Roboto_500Medium, Roboto_300Light } from '@expo-google-fonts/roboto';\nimport { connect } from 'react-redux';\n\nfunction RecipeDay7_0(props) {\n  var recipe = props.recipe;\n  console.log(\"RECETTE\", recipe);\n\n  var _useFonts = useFonts({\n    Handlee_400Regular: Handlee_400Regular,\n    Roboto_400Regular: Roboto_400Regular,\n    Roboto_700Bold: Roboto_700Bold,\n    Roboto_500Medium: Roboto_500Medium,\n    Roboto_300Light: Roboto_300Light\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(ImageBackground, {\n      source: require(\"../assets/007.png\"),\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }\n    }, React.createElement(Header, {\n      containerStyle: {\n        backgroundColor: 'white',\n        elevation: 6,\n        shadowOffsetX: 0,\n        shadowOffsetY: -10,\n        shadowColor: 'black',\n        shadowRadius: 7,\n        shadowOpacity: 0.2,\n        paddingTop: \"5%\"\n      },\n      leftComponent: React.createElement(MaterialIcons, {\n        name: \"arrow-back-ios\",\n        size: 26,\n        color: \"black\",\n        onPress: function onPress() {\n          return props.navigation.navigate('DailyProgram');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }\n      }),\n      centerComponent: {\n        text: 'Programmes',\n        style: {\n          fontFamily: 'Handlee_400Regular',\n          color: 'black',\n          fontSize: 26\n        }\n      },\n      rightComponent: React.createElement(FontAwesome5, {\n        name: \"user-alt\",\n        size: 26,\n        color: \"black\",\n        onPress: function onPress() {\n          return props.navigation.navigate('Profil');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }), React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }\n    }, React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }\n    }, React.createElement(View, {\n      style: {\n        marginLeft: '6%',\n        marginRight: '5%',\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_500Medium',\n        fontSize: 24,\n        color: 'black',\n        marginTop: 10,\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, recipe.title), React.createElement(Image, {\n      style: {\n        flex: 1,\n        width: '100%',\n        height: 150\n      },\n      source: {\n        uri: recipe.image\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_700Bold',\n        fontSize: 24,\n        color: 'black',\n        marginTop: '5%',\n        marginBottom: '3%',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Bienfaits\"), React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_400Regular'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, recipe.benefits), React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_500Medium',\n        fontSize: 20,\n        color: 'black',\n        marginTop: '4%',\n        marginBottom: '3%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Ingr\\xE9dients n\\xE9cessaires\"), React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_400Regular'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, recipe.ingredients), React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_500Medium',\n        fontSize: 20,\n        color: 'black',\n        marginTop: '4%',\n        marginBottom: '3%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Mode d'emploi\"), React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_400Regular'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, recipe.emploi), React.createElement(Button, {\n      dark: true,\n      style: {\n        marginTop: '11%',\n        marginBottom: '10%',\n        marginLeft: '32%',\n        backgroundColor: '#222222'\n      },\n      onPress: function onPress() {\n        props.navigation.navigate('Bravo');\n        props.rituel4Done(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_500Medium',\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }, \" \", recipe.btn, \" \"))))), React.createElement(StatusBar, {\n      style: \"dark\",\n      backgroundColor: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 4\n      }\n    }));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    recipe: state.recipe\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    rituel4Done: function rituel4Done(done) {\n      console.log(done, 'done ============>>>>');\n      dispatch({\n        type: 'doneAll',\n        done: done\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeDay7_0);","map":{"version":3,"sources":["C:/Users/MaKe'/Documents/LACAPSULE/NaliHair/Nali-project/screens/RecipeDay7_0.js"],"names":["React","StatusBar","Button","Text","View","Content","Header","MaterialIcons","FontAwesome5","AppLoading","useFonts","Handlee_400Regular","Roboto_400Regular","Roboto_700Bold","Roboto_500Medium","Roboto_300Light","connect","RecipeDay7_0","props","recipe","console","log","fontsLoaded","require","styles","container","backgroundColor","elevation","shadowOffsetX","shadowOffsetY","shadowColor","shadowRadius","shadowOpacity","paddingTop","navigation","navigate","text","style","fontFamily","color","fontSize","marginLeft","marginRight","marginTop","marginBottom","title","flex","width","height","uri","image","fontWeight","benefits","ingredients","emploi","rituel4Done","btn","StyleSheet","create","alignItems","justifyContent","mapStateToProps","state","mapDispatchToProps","dispatch","done","type"],"mappings":"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","sourcesContent":["// Chris\r\n\r\nimport React from 'react';\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, ImageBackground, Image, ScrollView} from 'react-native';\r\nimport { Button, Text, View, Content} from 'native-base';\r\nimport {  Header } from 'react-native-elements';\r\n\r\nimport { MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\r\n\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useFonts, Handlee_400Regular } from '@expo-google-fonts/handlee';\r\nimport { Roboto_400Regular, Roboto_700Bold, Roboto_500Medium, Roboto_300Light} from '@expo-google-fonts/roboto';\r\nimport { connect } from 'react-redux';\r\n\r\n function RecipeDay7_0(props) {\r\n  \r\n  var recipe = props.recipe;\r\n console.log(\"RECETTE\", recipe)\r\n  let [fontsLoaded] = useFonts({\r\n    Handlee_400Regular,\r\n    Roboto_400Regular,\r\n    Roboto_700Bold,\r\n    Roboto_500Medium,\r\n    Roboto_300Light\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  } else {\r\n    return (\r\n      \r\n  <ImageBackground source={require('../assets/007.png')} style={styles.container}>\r\n\r\n    <Header\r\n        containerStyle = {{\r\n          backgroundColor: 'white', \r\n          elevation: 6, \r\n          shadowOffsetX: 0,\r\n          shadowOffsetY: -10,\r\n          shadowColor: 'black', \r\n          shadowRadius: 7, \r\n          shadowOpacity: 0.2,\r\n          paddingTop: \"5%\"\r\n        }}       \r\n        leftComponent={<MaterialIcons \r\n                         name=\"arrow-back-ios\" \r\n                         size={26} \r\n                         color=\"black\" \r\n                         onPress={() => props.navigation.navigate('DailyProgram')}\r\n                         />}\r\n       centerComponent={{ text: 'Programmes', style: { fontFamily: 'Handlee_400Regular', color: 'black', fontSize: 26}}}\r\n       rightComponent={<FontAwesome5 \r\n                          name=\"user-alt\" \r\n                          size={26} \r\n                          color=\"black\" \r\n                          onPress={() => props.navigation.navigate('Profil')}\r\n                          />}\r\n      />\r\n\r\n<Content>\r\n<ScrollView>\r\n     <View style={{ marginLeft: '6%', marginRight: '5%', marginTop: '5%' }}>\r\n  \r\n        <Text style={{ fontFamily: 'Roboto_500Medium', fontSize: 24, color: 'black', marginTop: 10, marginBottom: 10}}>{recipe.title}</Text>\r\n        <Image style={{ flex: 1, width: '100%', height: 150 }} source={{  uri: recipe.image, }}/>\r\n        \r\n        <Text style={{ fontFamily: 'Roboto_700Bold', fontSize: 24, color: 'black', marginTop: '5%', marginBottom: '3%', fontWeight: 'bold' }}>Bienfaits</Text>\r\n        <Text style={{ fontFamily: 'Roboto_400Regular'}}>{recipe.benefits}</Text>\r\n        <Text style={{ fontFamily: 'Roboto_500Medium', fontSize: 20, color: 'black',  marginTop: '4%', marginBottom: '3%' }}>Ingrédients nécessaires</Text>\r\n        <Text style={{ fontFamily: 'Roboto_400Regular'}}>{recipe.ingredients}</Text>\r\n        <Text style={{ fontFamily: 'Roboto_500Medium', fontSize: 20, color: 'black',  marginTop: '4%', marginBottom: '3%' }}>Mode d'emploi</Text>\r\n        <Text style={{ fontFamily: 'Roboto_400Regular'}}>{recipe.emploi}</Text>\r\n        \r\n         <Button dark\r\n          style={{marginTop: '11%', marginBottom: '10%', marginLeft: '32%', backgroundColor: '#222222'}}\r\n          onPress={()=> {props.navigation.navigate( 'Bravo' ); props.rituel4Done(true); }}>\r\n           <Text style={{fontFamily: 'Roboto_500Medium', fontSize: 20}}> {recipe.btn} </Text>\r\n         </Button>\r\n      \r\n        \r\n                   \r\n   </View>   \r\n   </ScrollView>\r\n   </Content>\r\n   <StatusBar style=\"dark\" backgroundColor='white'/>\r\n\r\n </ImageBackground>\r\n    \r\n    );\r\n   }\r\n  }\r\n  \r\n  const styles = StyleSheet.create({\r\n     container: {\r\n       flex: 1,\r\n       alignItems: 'flex-start',\r\n       justifyContent: 'flex-start',\r\n     },\r\n  });\r\n\r\n  function mapStateToProps(state){\r\n   // console.log('MON STATE RECETTE =================>>>>>>>>',state)\r\n    return {recipe: state.recipe}\r\n    \r\n  }\r\n\r\n  function mapDispatchToProps(dispatch){\r\n    return {\r\n\r\n      rituel4Done: function(done) {\r\n        console.log(done, 'done ============>>>>');\r\n        dispatch({type: 'doneAll', done: done})\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n \r\n  export default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  \r\n  )\r\n  (RecipeDay7_0);\r\n"]},"metadata":{},"sourceType":"module"}