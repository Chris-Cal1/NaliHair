{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MaKe'\\\\Documents\\\\LACAPSULE\\\\NaliHair\\\\Nali-project\\\\screens\\\\DailyPics.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Header, SearchBar, Badge } from 'react-native-elements';\nimport { Content } from 'native-base';\nimport { MaterialIcons, FontAwesome5, Ionicons } from '@expo/vector-icons';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Handlee_400Regular } from '@expo-google-fonts/handlee';\nimport { Roboto_400Regular, Roboto_700Bold, Roboto_500Medium, Roboto_300Light } from '@expo-google-fonts/roboto';\nimport { connect } from 'react-redux';\n\nfunction DailyPics(props) {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var date = new Date().toLocaleDateString();\n  var photo = props.pictureList;\n\n  var handleSubmit = function handleSubmit() {\n    var data, database;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = new FormData();\n            data.append('avatar', {\n              uri: photo[0]._parts[0][1].uri,\n              type: 'image/jpeg',\n              name: 'avatar.jpg'\n            });\n            data.append('token', props.token);\n            data.append('comment', comment);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.254.3:3000/dailypics\", {\n              method: 'POST',\n              body: data\n            }));\n\n          case 6:\n            database = _context.sent;\n            props.navigation.navigate('MyDiary');\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var myPicture = props.pictureList.map(function (url, i) {\n    return React.createElement(Content, {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: {\n        marginLeft: '5%',\n        marginTop: '8%',\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'Roboto_700Bold',\n        fontSize: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, date)), React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.boxImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: url._parts[0][1].uri\n      },\n      style: {\n        height: '100%',\n        width: '100%',\n        borderRadius: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }))), React.createElement(View, {\n      style: styles.addIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, React.createElement(Ionicons, {\n      name: \"add-circle\",\n      size: 40,\n      color: \"black\",\n      onPress: function onPress() {\n        return props.navigation.navigate();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderColor: 'grey',\n        height: '20%',\n        backgroundColor: \"white\",\n        width: '90%',\n        margin: 20,\n        borderRadius: 10,\n        elevation: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, React.createElement(TextInput, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      multiline: true,\n      numberOfLines: 10,\n      placeholder: \"Indiquez le soin du jour et commentez l'\\xE9tat de vos cheveux\",\n      onChangeText: function onChangeText(val) {\n        return setComment(val);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: 'white',\n        backgroundColor: \"#222222\",\n        marginTop: 15,\n        fontFamily: 'Roboto',\n        borderRadius: 10,\n        height: 50,\n        width: 180,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: \"25%\",\n        marginBottom: \"60%\"\n      },\n      onPress: function onPress() {\n        return handleSubmit();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontFamily: 'Roboto',\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \" Valider \")));\n  });\n\n  var _useFonts = useFonts({\n    Handlee_400Regular: Handlee_400Regular,\n    Roboto_400Regular: Roboto_400Regular,\n    Roboto_700Bold: Roboto_700Bold,\n    Roboto_500Medium: Roboto_500Medium,\n    Roboto_300Light: Roboto_300Light\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return React.createElement(ImageBackground, {\n      source: require(\"../assets/005.png\"),\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, React.createElement(Header, {\n      containerStyle: {\n        backgroundColor: 'white',\n        elevation: 6,\n        shadowOffsetX: 0,\n        shadowOffsetY: -10,\n        shadowColor: 'black',\n        shadowRadius: 7,\n        shadowOpacity: 0.2,\n        paddingTop: \"5%\"\n      },\n      leftComponent: React.createElement(MaterialIcons, {\n        name: \"arrow-back-ios\",\n        size: 26,\n        color: \"black\",\n        onPress: function onPress() {\n          return props.navigation.navigate('MyDiary', {\n            screen: 'MyDiary'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 26\n        }\n      }),\n      centerComponent: {\n        text: 'Journal de bord',\n        style: {\n          fontFamily: 'Handlee_400Regular',\n          color: 'black',\n          fontSize: 26\n        }\n      },\n      rightComponent: React.createElement(FontAwesome5, {\n        name: \"user-alt\",\n        size: 26,\n        color: \"black\",\n        onPress: function onPress() {\n          return props.navigation.navigate('Profil', {\n            screen: 'Profil'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 28\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, myPicture), React.createElement(StatusBar, {\n      style: \"dark\",\n      backgroundColor: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  boxImage: {\n    alignContent: 'center',\n    marginTop: '8%',\n    height: 310,\n    width: Platform.select({\n      ios: '85%',\n      android: '90%'\n    }),\n    borderRadius: 10,\n    backgroundColor: 'white',\n    elevation: 6,\n    shadowColor: 'black',\n    shadowRadius: 7,\n    shadowOpacity: 0.2\n  },\n  addIcon: _objectSpread({}, Platform.select({\n    ios: {\n      marginRight: '10%',\n      marginTop: '20%',\n      alignItems: 'flex-end',\n      justifyContent: 'flex-end'\n    },\n    android: {\n      alignItems: 'flex-end',\n      justifyContent: 'flex-end',\n      marginRight: '8%',\n      marginTop: '10%'\n    }\n  }))\n});\n\nfunction mapStateToProps(state) {\n  return {\n    pictureList: state.picture,\n    token: state.token\n  };\n}\n\nexport default connect(mapStateToProps, null)(DailyPics);","map":{"version":3,"sources":["C:/Users/MaKe'/Documents/LACAPSULE/NaliHair/Nali-project/screens/DailyPics.js"],"names":["React","useState","StatusBar","Header","SearchBar","Badge","Content","MaterialIcons","FontAwesome5","Ionicons","AppLoading","useFonts","Handlee_400Regular","Roboto_400Regular","Roboto_700Bold","Roboto_500Medium","Roboto_300Light","connect","DailyPics","props","comment","setComment","date","Date","toLocaleDateString","photo","pictureList","handleSubmit","data","FormData","append","uri","_parts","type","name","token","fetch","method","body","database","navigation","navigate","myPicture","map","url","i","marginLeft","marginTop","alignItems","justifyContent","fontFamily","fontSize","styles","boxImage","height","width","borderRadius","addIcon","borderColor","backgroundColor","margin","elevation","val","color","marginBottom","fontsLoaded","require","flex","shadowOffsetX","shadowOffsetY","shadowColor","shadowRadius","shadowOpacity","paddingTop","screen","text","style","StyleSheet","create","container","alignContent","Platform","select","ios","android","marginRight","mapStateToProps","state","picture"],"mappings":"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","sourcesContent":["// Phyllis\r\nimport React, {useState} from 'react';\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, ImageBackground, Image, TouchableOpacity, Linking, Text, View, ScrollView, KeyboardAvoidingView, TextInput } from 'react-native';\r\nimport {  Header, SearchBar, Badge } from 'react-native-elements';\r\nimport { Content} from 'native-base';\r\n\r\nimport { MaterialIcons, FontAwesome5, Ionicons } from '@expo/vector-icons';\r\n\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useFonts, Handlee_400Regular } from '@expo-google-fonts/handlee';\r\nimport { Roboto_400Regular, Roboto_700Bold, Roboto_500Medium, Roboto_300Light } from '@expo-google-fonts/roboto';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction DailyPics(props) {\r\n      \r\n  const [comment, setComment] = useState('');\r\n  var date = new Date().toLocaleDateString()\r\n var photo = props.pictureList;\r\n //console.log(\"PHOTO\", photo[0]._parts[0].[1].uri)\r\nvar handleSubmit = async () => {\r\n \r\n               \r\n                var data = new FormData();\r\n                data.append('avatar', {\r\n                  uri: photo[0]._parts[0].[1].uri,\r\n                  type: 'image/jpeg',\r\n                  name: 'avatar.jpg'   \r\n                });\r\n                data.append('token', props.token);\r\n                data.append('comment', comment)\r\n           \r\n\r\n  const database = await fetch(\"http://192.168.254.3:3000/dailypics\", {\r\n    method: 'POST',\r\n    body: data \r\n  })\r\n  props.navigation.navigate('MyDiary')\r\n\r\n}\r\n\r\nvar myPicture = props.pictureList.map((url, i) => {\r\n  //console.log(url._parts[0].[1].uri, \"MY URL\")\r\n  return(\r\n    <Content key= {i}>\r\n\r\n        <View style={{ marginLeft: '5%', marginTop: '8%', alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n          <Text style={{ fontFamily: 'Roboto_700Bold', fontSize: 24}}>{date}</Text>\r\n        </View>\r\n\r\n        <View style={{justifyContent: 'center', alignItems: 'center'}}>\r\n          <View style={styles.boxImage}>\r\n            <Image source={{ uri: url._parts[0].[1].uri}} style={{ height: '100%', width: '100%', borderRadius: 10 }} />\r\n          </View>\r\n        </View>    \r\n\r\n        <View style={styles.addIcon}>\r\n        <Ionicons name=\"add-circle\" size={40} color=\"black\" onPress={() => props.navigation.navigate()}/>\r\n        </View>\r\n         \r\n\r\n        <TouchableOpacity style={{justifyContent: 'center', alignItems: 'center', borderColor: 'grey', height: '20%', backgroundColor: \"white\", width: '90%', margin: 20, borderRadius: 10, elevation: 5, }}> \r\n        <TextInput  style={{justifyContent: 'center', alignItems: 'center'}}\r\n          multiline={true}\r\n          numberOfLines={10}\r\n          placeholder=\"Indiquez le soin du jour et commentez l'état de vos cheveux\"\r\n         onChangeText={(val) => setComment(val)}\r\n         />\r\n      </TouchableOpacity>\r\n\r\n       <TouchableOpacity  style={{ justifyContent: 'center', alignItems: 'center', fontSize: 40, color: 'white', backgroundColor: \"#222222\", marginTop: 15, fontFamily: 'Roboto', borderRadius: 10, height: 50, width: 180, alignItems: 'center', justifyContent: 'center', marginLeft: \"25%\", marginBottom: \"60%\"}}\r\n        onPress={() => handleSubmit()}\r\n        >\r\n        <Text style={{ color: 'white', fontFamily: 'Roboto', fontSize: 20}}> Valider </Text>\r\n       </TouchableOpacity >\r\n\r\n        </Content>\r\n  )\r\n\r\n})\r\n\r\n\r\n\r\n      let [fontsLoaded] = useFonts({\r\n        Handlee_400Regular,\r\n        Roboto_400Regular,\r\n        Roboto_700Bold,\r\n        Roboto_500Medium,\r\n        Roboto_300Light\r\n      });\r\n    \r\n      if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n      } else {\r\n        return (\r\n          <ImageBackground source={require('../assets/005.png')} style={{flex: 1}}>\r\n    \r\n          <Header\r\n          containerStyle = {{\r\n            backgroundColor: 'white', \r\n            elevation: 6, \r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: -10,\r\n            shadowColor: 'black', \r\n            shadowRadius: 7, \r\n            shadowOpacity: 0.2,\r\n            paddingTop: \"5%\"\r\n          }}\r\n          leftComponent={<MaterialIcons \r\n            name=\"arrow-back-ios\" \r\n            size={26} \r\n            color=\"black\" \r\n            onPress={() => props.navigation.navigate('MyDiary', { screen: 'MyDiary' })}\r\n            />}\r\n           centerComponent={{ text: 'Journal de bord', style: { fontFamily: 'Handlee_400Regular', color: 'black', fontSize: 26}}}\r\n           rightComponent={<FontAwesome5 \r\n                              name=\"user-alt\" \r\n                              size={26} \r\n                              color=\"black\" \r\n                              onPress={() => props.navigation.navigate('Profil', { screen: 'Profil' })}\r\n                              />}\r\n          />\r\n    <ScrollView>\r\n        {myPicture}\r\n        </ScrollView>\r\n        \r\n\r\n    <StatusBar style=\"dark\" backgroundColor='white'/>\r\n\r\n  </ImageBackground>\r\n     \r\n    );\r\n  }\r\n}\r\n  \r\n  const styles = StyleSheet.create({\r\n     container: {\r\n       flex: 1,\r\n       alignItems: 'center',\r\n       justifyContent: 'flex-start',\r\n     },\r\n     boxImage: {\r\n      alignContent: 'center',\r\n      marginTop: '8%', \r\n      height: 310, \r\n      width: Platform.select({\r\n        ios: '85%', \r\n        android:'90%', \r\n      }),  \r\n      borderRadius: 10, \r\n      backgroundColor: 'white', \r\n      elevation: 6, \r\n      shadowColor: 'black', \r\n      shadowRadius: 7, \r\n      shadowOpacity: 0.2,\r\n     },\r\n     addIcon: {\r\n       ...Platform.select({\r\n        ios: {\r\n        marginRight: '10%', \r\n        marginTop: '20%',\r\n        alignItems: 'flex-end', \r\n        justifyContent: 'flex-end',\r\n      },\r\n        android: {\r\n        alignItems: 'flex-end', \r\n        justifyContent: 'flex-end',\r\n        marginRight: '8%', \r\n        marginTop: '10%',\r\n      },\r\n      }),  \r\n      },\r\n\r\n  });\r\n\r\n  function mapStateToProps(state) {\r\n    //console.log(state);\r\n    return { pictureList : state.picture, token: state.token }\r\n  }\r\n\r\n  export default connect(\r\n    mapStateToProps, \r\n    null,\r\n  )(DailyPics);"]},"metadata":{},"sourceType":"module"}