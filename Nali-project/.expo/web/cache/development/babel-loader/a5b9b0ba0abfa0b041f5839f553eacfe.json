{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MaKe'\\\\Documents\\\\LACAPSULE\\\\NaliHair\\\\Nali-project\\\\screens\\\\Bravo.js\";\nimport React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button } from 'react-native-elements';\nimport { Text, View, Content } from 'native-base';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Handlee_400Regular } from '@expo-google-fonts/handlee';\nimport { Roboto_400Regular, Roboto_700Bold, Roboto_500Medium, Roboto_300Light } from '@expo-google-fonts/roboto';\nexport default function Bravo(props) {\n  var _useFonts = useFonts({\n    Handlee_400Regular: Handlee_400Regular,\n    Roboto_400Regular: Roboto_400Regular,\n    Roboto_700Bold: Roboto_700Bold,\n    Roboto_500Medium: Roboto_500Medium,\n    Roboto_300Light: Roboto_300Light\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(ImageBackground, {\n      source: require(\"../assets/009.png\"),\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }, React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 40,\n        color: '#222222',\n        marginBottom: 30,\n        fontFamily: 'Roboto_700Bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Bravo !\"), React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: '#222222',\n        marginBottom: 20,\n        fontFamily: 'Roboto_500Medium'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Votre routine du jour est termin\\xE9e.\"), React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: '#222222',\n        marginBottom: 30,\n        fontFamily: 'Roboto_400Regular'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"A demain pour la suite du programme.\")), React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, React.createElement(Button, {\n      title: \"Mon programme\",\n      buttonStyle: styles.button,\n      onPress: function onPress() {\n        return props.navigation.navigate('DailyProgram');\n      },\n      type: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }))), React.createElement(StatusBar, {\n      style: \"dark\",\n      backgroundColor: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: \"#222222\",\n    borderRadius: 10,\n    width: 250,\n    height: 50,\n    fontFamily: 'Roboto_700Bold',\n    marginTop: Platform.select({\n      ios: '10%',\n      android: '7%'\n    })\n  }\n});","map":{"version":3,"sources":["C:/Users/MaKe'/Documents/LACAPSULE/NaliHair/Nali-project/screens/Bravo.js"],"names":["React","StatusBar","Button","Text","View","Content","AppLoading","useFonts","Handlee_400Regular","Roboto_400Regular","Roboto_700Bold","Roboto_500Medium","Roboto_300Light","Bravo","props","fontsLoaded","require","styles","container","justifyContent","alignItems","marginTop","fontSize","color","marginBottom","fontFamily","button","navigation","navigate","StyleSheet","create","flex","backgroundColor","borderRadius","width","height","Platform","select","ios","android"],"mappings":"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","sourcesContent":["// Phyllis\r\nimport React from 'react';\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, ImageBackground, TouchableOpacity} from 'react-native';\r\nimport { Button} from 'react-native-elements'\r\n\r\nimport {  Text, View, Content} from 'native-base';\r\n\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useFonts, Handlee_400Regular } from '@expo-google-fonts/handlee';\r\nimport { Roboto_400Regular, Roboto_700Bold, Roboto_500Medium, Roboto_300Light } from '@expo-google-fonts/roboto';\r\n\r\n\r\nexport default function Bravo(props) {\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Handlee_400Regular,\r\n    Roboto_400Regular,\r\n    Roboto_700Bold,\r\n    Roboto_500Medium,\r\n    Roboto_300Light\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  } else {\r\n\r\n    return (\r\n      \r\n   <ImageBackground source={require('../assets/009.png')}style={styles.container}>  \r\n     <Content>\r\n\r\n      <View style={{ justifyContent: 'center', alignItems: 'center', marginTop: '70%'}}>\r\n        <Text style={{ fontSize: 40, color: '#222222', marginBottom: 30, fontFamily: 'Roboto_700Bold'}}>Bravo !</Text>\r\n        <Text style={{ fontSize: 20, color: '#222222', marginBottom: 20, fontFamily: 'Roboto_500Medium' }}>Votre routine du jour est termin√©e.</Text>\r\n        <Text style={{ fontSize: 20, color: '#222222', marginBottom: 30, fontFamily: 'Roboto_400Regular'}}>A demain pour la suite du programme.</Text>\r\n      </View>\r\n\r\n        <View style={{ justifyContent:'center', alignItems: 'center'}}>\r\n            <Button \r\n           title=\"Mon programme\"\r\n           buttonStyle={styles.button}\r\n           onPress={() => props.navigation.navigate( 'DailyProgram' )}\r\n           type=\"solid\"\r\n            />\r\n          </View>\r\n          \r\n      </Content>\r\n    <StatusBar style=\"dark\" backgroundColor='white'/>\r\n   </ImageBackground>\r\n    \r\n  \r\n    );\r\n  }\r\n}\r\n  const styles = StyleSheet.create({\r\n     container: {\r\n       flex: 1,\r\n       alignItems: 'center',\r\n       justifyContent: 'center',\r\n     },\r\n     button: {\r\n      backgroundColor: \"#222222\", \r\n      borderRadius: 10, \r\n      width: 250, \r\n      height: 50, \r\n      fontFamily: 'Roboto_700Bold', \r\n      marginTop: Platform.select({\r\n        ios: '10%', \r\n        android:'7%', \r\n      }),\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}