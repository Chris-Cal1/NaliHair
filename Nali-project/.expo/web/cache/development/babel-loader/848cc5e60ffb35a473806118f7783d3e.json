{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MaKe'\\\\Documents\\\\LACAPSULE\\\\NaliHair\\\\Nali-project\\\\screens\\\\Sign-up.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Card, ListItem, CheckBox, Input } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Handlee_400Regular } from '@expo-google-fonts/handlee';\nimport { Roboto_400Regular, Roboto_700Bold, Roboto_500Medium, Roboto_300Light } from '@expo-google-fonts/roboto';\nimport { connect } from 'react-redux';\n\nfunction Signup(props) {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mail = _useState4[0],\n      setMail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userExists = _useState8[0],\n      setUserExists = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      listErrorsSignup = _useState10[0],\n      setErrorsSignup = _useState10[1];\n\n  var userData = {\n    Name: name,\n    Mail: mail,\n    Password: password\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var data, body, tabErrorsSignup;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.254.3:3000/sign-up', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: \"username=\" + name + \"&email=\" + mail + \"&password=\" + password\n            }));\n\n          case 2:\n            data = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(data.json());\n\n          case 5:\n            body = _context.sent;\n\n            if (body.result == true) {\n              props.addToken(body.token);\n              setUserExists(true);\n              props.navigation.navigate('Profil');\n            } else {\n              setErrorsSignup(body.error);\n            }\n\n            if (userExists) {\n              props.addToken(body.token);\n              AsyncStorage.setItem;\n            }\n\n            tabErrorsSignup = listErrorsSignup.map(function (error, i) {\n              return React.createElement(\"p\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 14\n                }\n              }, error);\n            });\n\n            if (name && mail && password !== '') {\n              AsyncStorage.setItem(\"user\", JSON.stringify(userData));\n              props.navigation.navigate('RoutineChoice');\n              props.addToken(body.token);\n              console.log(userData);\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useFonts = useFonts({\n    Handlee_400Regular: Handlee_400Regular,\n    Roboto_400Regular: Roboto_400Regular,\n    Roboto_700Bold: Roboto_700Bold,\n    Roboto_500Medium: Roboto_500Medium,\n    Roboto_300Light: Roboto_300Light\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }\n    });\n  } else {\n    return React.createElement(ImageBackground, {\n      source: require(\"../assets/003.png\"),\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/logo_nalihair.png\"),\n      style: {\n        width: 150,\n        height: 200,\n        marginBottom: '10%',\n        marginTop: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), React.createElement(Input, {\n      containerStyle: {\n        borderColor: \"lightgrey\",\n        marginBottom: 20,\n        elevation: 3,\n        width: 200,\n        height: '8%'\n      },\n      placeholder: \"Pr\\xE9nom\",\n      onChangeText: function onChangeText(val) {\n        return setName(val);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), React.createElement(Input, {\n      containerStyle: {\n        borderColor: \"lightgrey\",\n        marginBottom: 20,\n        elevation: 3,\n        width: 200,\n        height: '8%'\n      },\n      placeholder: \"Mail\",\n      onChangeText: function onChangeText(val) {\n        return setMail(val);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 10\n      }\n    }), React.createElement(Input, {\n      containerStyle: {\n        borderColor: \"lightgrey\",\n        marginBottom: 20,\n        elevation: 3,\n        width: 200,\n        height: '8%'\n      },\n      placeholder: \"Mot de passe\",\n      onChangeText: function onChangeText(val) {\n        return setPassword(val);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 10\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: {\n        fontSize: 40,\n        color: 'white',\n        backgroundColor: \"#222222\",\n        marginTop: 15,\n        fontFamily: 'Roboto_400Regular',\n        borderRadius: 10,\n        height: 50,\n        width: 180,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      onPress: function onPress() {\n        return handleSubmit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontFamily: 'Roboto_400Regular',\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \" Me connecter \")), React.createElement(Text, {\n      style: {\n        color: '#222222',\n        fontFamily: 'Roboto_400Regular',\n        fontSize: 15,\n        marginTop: 15\n      },\n      onPress: function onPress() {\n        return props.navigation.navigate('Signin');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \" D\\xE9j\\xE0 inscrit \")), React.createElement(StatusBar, {\n      style: \"dark\",\n      backgroundColor: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToken: function addToken(token) {\n      console.log(\"MON TOKEN ======>>\", token);\n      dispatch({\n        type: 'addToken',\n        token: token\n      });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["C:/Users/MaKe'/Documents/LACAPSULE/NaliHair/Nali-project/screens/Sign-up.js"],"names":["React","useState","useEffect","useRef","StatusBar","Card","ListItem","CheckBox","Input","AsyncStorage","AppLoading","useFonts","Handlee_400Regular","Roboto_400Regular","Roboto_700Bold","Roboto_500Medium","Roboto_300Light","connect","Signup","props","name","setName","mail","setMail","password","setPassword","userExists","setUserExists","listErrorsSignup","setErrorsSignup","userData","Name","Mail","Password","handleSubmit","fetch","method","headers","body","data","json","result","addToken","token","navigation","navigate","error","setItem","tabErrorsSignup","map","i","JSON","stringify","console","log","fontsLoaded","require","styles","container","width","height","marginBottom","marginTop","borderColor","elevation","val","fontSize","color","backgroundColor","fontFamily","borderRadius","alignItems","justifyContent","StyleSheet","create","flex","mapDispatchToProps","dispatch","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAkD,OAAlD;AAEA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;;;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,KAAnC,QAAgD,uBAAhD;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,4BAA7C;AACA,SAASC,iBAAT,EAA4BC,cAA5B,EAA4CC,gBAA5C,EAA8DC,eAA9D,QAAoF,2BAApF;AAEA,SAAQC,OAAR,QAAsB,aAAtB;;AAGC,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,kBAEElB,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEfmB,IAFe;AAAA,MAETC,OAFS;;AAAA,mBAGEpB,QAAQ,CAAC,EAAD,CAHV;AAAA;AAAA,MAGfqB,IAHe;AAAA,MAGTC,OAHS;;AAAA,mBAIUtB,QAAQ,CAAC,EAAD,CAJlB;AAAA;AAAA,MAIfuB,QAJe;AAAA,MAILC,WAJK;;AAAA,mBAMcxB,QAAQ,CAAC,KAAD,CANtB;AAAA;AAAA,MAMfyB,UANe;AAAA,MAMHC,aANG;;AAAA,mBAOsB1B,QAAQ,CAAC,EAAD,CAP9B;AAAA;AAAA,MAOf2B,gBAPe;AAAA,MAOGC,eAPH;;AASxB,MAAIC,QAAQ,GAAG;AAACC,IAAAA,IAAI,EAAEX,IAAP;AAAaY,IAAAA,IAAI,EAAEV,IAAnB;AAAyBW,IAAAA,QAAQ,EAAET;AAAnC,GAAf;;AAEE,MAAIU,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAIEC,KAAK,CAAC,mCAAD,EAAsC;AAE5DC,cAAAA,MAAM,EAAE,MAFoD;AAG5DC,cAAAA,OAAO,EAAE;AAAC,gCAAgB;AAAjB,eAHmD;AAI5DC,cAAAA,IAAI,gBAAclB,IAAd,eAA4BE,IAA5B,kBAA6CE;AAJW,aAAtC,CAJP;;AAAA;AAIXe,YAAAA,IAJW;AAAA;AAAA,6CAWEA,IAAI,CAACC,IAAL,EAXF;;AAAA;AAWXF,YAAAA,IAXW;;AAajB,gBAAGA,IAAI,CAACG,MAAL,IAAe,IAAlB,EAAuB;AACrBtB,cAAAA,KAAK,CAACuB,QAAN,CAAeJ,IAAI,CAACK,KAApB;AACAhB,cAAAA,aAAa,CAAC,IAAD,CAAb;AACAR,cAAAA,KAAK,CAACyB,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B;AAED,aALD,MAKO;AACLhB,cAAAA,eAAe,CAACS,IAAI,CAACQ,KAAN,CAAf;AACD;;AAED,gBAAGpB,UAAH,EAAc;AAEZP,cAAAA,KAAK,CAACuB,QAAN,CAAeJ,IAAI,CAACK,KAApB;AACAlC,cAAAA,YAAY,CAACsC,OAAb;AAED;;AAEGC,YAAAA,eA7Ba,GA6BKpB,gBAAgB,CAACqB,GAAjB,CAAqB,UAACH,KAAD,EAAOI,CAAP,EAAa;AACtD,qBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAIJ,KAAJ,CAAP;AACD,aAFqB,CA7BL;;AAiChB,gBAAG1B,IAAI,IAAIE,IAAR,IAAgBE,QAAQ,KAAK,EAAhC,EAAoC;AACnCf,cAAAA,YAAY,CAACsC,OAAb,CAAqB,MAArB,EAA6BI,IAAI,CAACC,SAAL,CAAetB,QAAf,CAA7B;AACAX,cAAAA,KAAK,CAACyB,UAAN,CAAiBC,QAAjB,CAA0B,eAA1B;AACC1B,cAAAA,KAAK,CAACuB,QAAN,CAAeJ,IAAI,CAACK,KAApB;AAEDU,cAAAA,OAAO,CAACC,GAAR,CAAYxB,QAAZ;AACD;;AAvCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAXsB,kBAyEAnB,QAAQ,CAAC;AAC3BC,IAAAA,kBAAkB,EAAlBA,kBAD2B;AAE3BC,IAAAA,iBAAiB,EAAjBA,iBAF2B;AAG3BC,IAAAA,cAAc,EAAdA,cAH2B;AAI3BC,IAAAA,gBAAgB,EAAhBA,gBAJ2B;AAK3BC,IAAAA,eAAe,EAAfA;AAL2B,GAAD,CAzER;AAAA;AAAA,MAyEfuC,WAzEe;;AAiFpB,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACT,WAEE,oBAAC,eAAD;AAAkB,MAAA,MAAM,EAAEC,OAAO,qBAAjC;AAAwD,MAAA,KAAK,EAAEC,MAAM,CAACC,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEF,OAAO,+BAAtB;AAAuD,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE,GAAtB;AAA2BC,QAAAA,YAAY,EAAE,KAAzC;AAAgDC,QAAAA,SAAS,EAAE;AAA3D,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AACA,MAAA,cAAc,EAAI;AAACC,QAAAA,WAAW,EAAE,WAAd;AAA2BF,QAAAA,YAAY,EAAE,EAAzC;AAA6CG,QAAAA,SAAS,EAAE,CAAxD;AAA2DL,QAAAA,KAAK,EAAE,GAAlE;AAAuEC,QAAAA,MAAM,EAAE;AAA/E,OADlB;AAEA,MAAA,WAAW,EAAC,WAFZ;AAGA,MAAA,YAAY,EAAE,sBAACK,GAAD;AAAA,eAAS5C,OAAO,CAAC4C,GAAD,CAAhB;AAAA,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAQC,oBAAC,KAAD;AACC,MAAA,cAAc,EAAI;AAACF,QAAAA,WAAW,EAAE,WAAd;AAA2BF,QAAAA,YAAY,EAAE,EAAzC;AAA6CG,QAAAA,SAAS,EAAE,CAAxD;AAA2DL,QAAAA,KAAK,EAAE,GAAlE;AAAuEC,QAAAA,MAAM,EAAE;AAA/E,OADnB;AAEC,MAAA,WAAW,EAAC,MAFb;AAGC,MAAA,YAAY,EAAE,sBAACK,GAAD;AAAA,eAAS1C,OAAO,CAAC0C,GAAD,CAAhB;AAAA,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,EAaC,oBAAC,KAAD;AACC,MAAA,cAAc,EAAI;AAACF,QAAAA,WAAW,EAAE,WAAd;AAA2BF,QAAAA,YAAY,EAAE,EAAzC;AAA6CG,QAAAA,SAAS,EAAE,CAAxD;AAA2DL,QAAAA,KAAK,EAAE,GAAlE;AAAuEC,QAAAA,MAAM,EAAE;AAA/E,OADnB;AAEC,MAAA,WAAW,EAAC,cAFb;AAGC,MAAA,YAAY,EAAE,sBAACK,GAAD;AAAA,eAASxC,WAAW,CAACwC,GAAD,CAApB;AAAA,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,EAmBE,oBAAC,gBAAD;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE,OAAvB;AAAgCC,QAAAA,eAAe,EAAE,SAAjD;AAA4DN,QAAAA,SAAS,EAAE,EAAvE;AAA2EO,QAAAA,UAAU,EAAE,mBAAvF;AAA4GC,QAAAA,YAAY,EAAE,EAA1H;AAA8HV,QAAAA,MAAM,EAAE,EAAtI;AAA0ID,QAAAA,KAAK,EAAE,GAAjJ;AAAsJY,QAAAA,UAAU,EAAE,QAAlK;AAA4KC,QAAAA,cAAc,EAAE;AAA5L,OAA1B;AACA,MAAA,OAAO,EAAE;AAAA,eAAMtC,YAAY,EAAlB;AAAA,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEiC,QAAAA,KAAK,EAAE,OAAT;AAAkBE,QAAAA,UAAU,EAAE,mBAA9B;AAAmDH,QAAAA,QAAQ,EAAE;AAA7D,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHA,CAnBF,EAwBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBE,QAAAA,UAAU,EAAE,mBAAhC;AAAqDH,QAAAA,QAAQ,EAAE,EAA/D;AAAmEJ,QAAAA,SAAS,EAAE;AAA9E,OAAb;AAAiG,MAAA,OAAO,EAAE;AAAA,eAAM3C,KAAK,CAACyB,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B,CAAN;AAAA,OAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAxBF,CADJ,EA2BE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAwB,MAAA,eAAe,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,CAFF;AAgCD;AACA;;AACD,IAAMY,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC9BhB,EAAAA,SAAS,EAAE;AACTiB,IAAAA,IAAI,EAAE,CADG;AAETJ,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADmB,CAAlB,CAAf;;AAUA,SAASI,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLnC,IAAAA,QAAQ,EAAE,kBAASC,KAAT,EAAe;AACvBU,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCX,KAAlC;AACAkC,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,UAAP;AAAmBnC,QAAAA,KAAK,EAAEA;AAA1B,OAAD,CAAR;AACD;AAJI,GAAP;AAMD;;AAED,eAAe1B,OAAO,CACpB,IADoB,EAEpB2D,kBAFoB,CAAP,CAGb1D,MAHa,CAAf","sourcesContent":["import React, { useState, useEffect, useRef} from 'react';\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, ImageBackground, Button, TouchableOpacity, View, Image} from 'react-native';\r\nimport { Card, ListItem, CheckBox, Input } from 'react-native-elements'\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useFonts, Handlee_400Regular } from '@expo-google-fonts/handlee';\r\nimport { Roboto_400Regular, Roboto_700Bold, Roboto_500Medium, Roboto_300Light} from '@expo-google-fonts/roboto';\r\n\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n function Signup(props) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [mail, setMail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [userExists, setUserExists] = useState(false)\r\n  const [listErrorsSignup, setErrorsSignup] = useState([])\r\n\r\nvar userData = {Name: name, Mail: mail, Password: password};\r\n \r\n  var handleSubmit = async () => {\r\n\r\n\r\n\r\n    const data = await fetch('http://192.168.254.3:3000/sign-up', {\r\n\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      body: `username=${name}&email=${mail}&password=${password}`\r\n    })\r\n\r\n    const body = await data.json()\r\n\r\n    if(body.result == true){\r\n      props.addToken(body.token)\r\n      setUserExists(true)\r\n      props.navigation.navigate('Profil')\r\n\r\n    } else {\r\n      setErrorsSignup(body.error)\r\n    }\r\n\r\n    if(userExists){\r\n      //props.navigation.navigate('Signin')\r\n      props.addToken(body.token)\r\n      AsyncStorage.setItem\r\n\r\n    }\r\n    \r\n    var tabErrorsSignup = listErrorsSignup.map((error,i) => {\r\n      return(<p>{error}</p>)\r\n    });\r\n  \r\n     if(name && mail && password !== '') {\r\n      AsyncStorage.setItem(\"user\", JSON.stringify(userData))\r\n      props.navigation.navigate('RoutineChoice')\r\n       props.addToken(body.token)\r\n\r\n      console.log(userData)\r\n    }\r\n   }\r\n\r\n   \r\n\r\n    /* AsyncStorage.getItem('user', (err, data) => {\r\n\r\n      var userData = JSON.parse(data);\r\n      if (data) {\r\n        setName(userData.Name);\r\n        setMail(userData.Mail);\r\n        setPassword(userData.Password);\r\n\r\n        \r\n\r\n        props.navigation.navigate('Profil')\r\n        console.log(data)\r\n       \r\n      }\r\n\r\n    });*/\r\n\r\n\r\n    let [fontsLoaded] = useFonts({\r\n      Handlee_400Regular,\r\n      Roboto_400Regular,\r\n      Roboto_700Bold,\r\n      Roboto_500Medium,\r\n      Roboto_300Light\r\n    });\r\n  \r\n    if (!fontsLoaded) {\r\n      return <AppLoading />;\r\n    } else {\r\n  return (\r\n\r\n    <ImageBackground  source={require('../assets/003.png')} style={styles.container}>\r\n        <View style={styles.container}> \r\n          <Image source={require('../assets/logo_nalihair.png')} style={{ width: 150, height: 200, marginBottom: '10%', marginTop: '20%' }} />\r\n\r\n          <Input \r\n          containerStyle = {{borderColor: \"lightgrey\", marginBottom: 20, elevation: 3, width: 200, height: '8%' }}\r\n          placeholder='Prénom'\r\n          onChangeText={(val) => setName(val)}/>\r\n\r\n         <Input \r\n          containerStyle = {{borderColor: \"lightgrey\", marginBottom: 20, elevation: 3, width: 200, height: '8%' }}\r\n          placeholder='Mail'\r\n          onChangeText={(val) => setMail(val)}/>\r\n\r\n         <Input \r\n          containerStyle = {{borderColor: \"lightgrey\", marginBottom: 20, elevation: 3, width: 200, height: '8%' }}\r\n          placeholder='Mot de passe'\r\n          onChangeText={(val) => setPassword(val)}/>\r\n\r\n\r\n          <TouchableOpacity  style={{ fontSize: 40, color: 'white', backgroundColor: \"#222222\", marginTop: 15, fontFamily: 'Roboto_400Regular', borderRadius: 10, height: 50, width: 180, alignItems: 'center', justifyContent: 'center'}}\r\n          onPress={() => handleSubmit()}\r\n          >\r\n          <Text style={{ color: 'white', fontFamily: 'Roboto_400Regular', fontSize: 20}}> Me connecter </Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ color: '#222222', fontFamily: 'Roboto_400Regular', fontSize: 15, marginTop: 15}}  onPress={() => props.navigation.navigate('Signin')}> Déjà inscrit </Text>\r\n        </View>\r\n      <StatusBar style=\"dark\" backgroundColor='white'/>\r\n    </ImageBackground>\r\n  );\r\n}\r\n}\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n     flex: 1,\r\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n     \r\n   },\r\n});\r\n\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    addToken: function(token){\r\n      console.log(\"MON TOKEN ======>>\", token)\r\n      dispatch({type: 'addToken', token: token})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Signup)\r\n\r\n"]},"metadata":{},"sourceType":"module"}